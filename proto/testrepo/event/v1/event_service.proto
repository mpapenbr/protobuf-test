syntax = "proto3";
package testrepo.event.v1;

import "testrepo/analysis/v1/analysis.proto";
import "testrepo/car/v1/car.proto";
import "testrepo/common/v1/common.proto";
import "testrepo/event/v1/event.proto";
import "testrepo/racestate/v1/racestate.proto";
import "testrepo/track/v1/track.proto";

message GetEventsRequest {}

message GetEventRequest {
  testrepo.common.v1.EventSelector event_selector = 1;
}

message GetLatestEventsRequest {
  int32 offset = 1;
  int32 limit = 2;
}
message GetLatestEventsResponse {
  repeated Event events = 1;
}

message GetEventResponse {
  Event event = 1;
  testrepo.track.v1.Track track = 2;
  testrepo.analysis.v1.Analysis analysis = 3;
  testrepo.racestate.v1.StateContainer state = 4;
  testrepo.car.v1.CarContainer car = 5;
}

message GetEventsResponse {
  Event event = 1;
}
message CreateEventRequest {
  Event event = 1;
}
message CreateEventResponse {
  Event event = 1;
}

message DeleteEventRequest {
  testrepo.common.v1.EventSelector event_selector = 1;
}
message DeleteEventResponse {}

service EventService {
  rpc GetEvents(GetEventsRequest) returns (stream GetEventsResponse) {}
  // returns the event along with all data required for the frontend
  rpc GetEvent(GetEventRequest) returns (GetEventResponse) {}
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse) {}
  rpc GetLatestEvents(GetLatestEventsRequest) returns (GetLatestEventsResponse) {}
}
